// 빌드 과정에서 필요한 설정. 외부 라이브러리를 클래스패스에 추가하는 등의 기능을 함
buildscript {
    // 개발에 필요한 의존성 선언
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:2.3.0.RELEASE")
    }
}

plugins {
    id 'java'
    id 'org.springframework.boot' version '2.3.0.RELEASE'
    id 'io.spring.dependency-management' version '1.0.9.RELEASE' // 스프링 부트 의존성 관리
}

group = 'com.kosalaam'
version = '1.0'
sourceCompatibility = '14'

// 각종 의존성 라이브러리들을 어떤 원격 저장소에서 받을지 정함
repositories {
    mavenCentral()
    jcenter()
}



dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'

    // database
    implementation 'org.springframework.boot:spring-boot-starter-jdbc'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    runtimeOnly 'org.postgresql:postgresql'

    // test
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.6.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine'

    // lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    // Swagger 2
    implementation 'io.springfox:springfox-boot-starter:3.0.0'
    implementation 'io.springfox:springfox-swagger-ui:3.0.0'

    // Security
    implementation 'org.springframework.boot:spring-boot-starter-security'

    // hibernate-validator
    implementation group: 'org.hibernate.validator', name: 'hibernate-validator', version: '6.0.8.Final'

    // firebase admin sdk
    implementation 'com.google.firebase:firebase-admin:8.0.0'
}
test {
    useJUnitPlatform()
}

sourceSets {
    main {
        resources {
            srcDirs "src/main/resources"
        }
    }
    test {
        resources {
            srcDirs "src/main/resources"
        }
    }
}
